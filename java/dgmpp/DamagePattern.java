/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package dgmpp;

public class DamagePattern extends DamageVector {
  private transient long swigCPtr;

  protected DamagePattern(long cPtr, boolean cMemoryOwn) {
    super(dgmppJNI.DamagePattern_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DamagePattern obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        dgmppJNI.delete_DamagePattern(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DamagePattern() {
    this(dgmppJNI.new_DamagePattern__SWIG_0(), true);
  }

  public DamagePattern(DamageVector damage) {
    this(dgmppJNI.new_DamagePattern__SWIG_1(DamageVector.getCPtr(damage), damage), true);
  }

  public DamagePattern(float em, float thermal, float kinetic, float explosive) {
    this(dgmppJNI.new_DamagePattern__SWIG_2(em, thermal, kinetic, explosive), true);
  }

}
